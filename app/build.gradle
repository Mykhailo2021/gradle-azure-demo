/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // New dependency added for Apache Commons Lang
    implementation 'org.apache.commons:commons-lang3:3.12.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        // Changed Java version to 17 (LTS version)
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Custom task added to show project information
task showProjectInfo {
    // Capture project properties during configuration phase
    def projectName = project.name
    def javaVersion = java.toolchain.languageVersion.get()
    def mainClassName = application.mainClass.get()

    doLast {
        // Use the captured properties during execution
        println "Project Name: $projectName"
        println "Java Version: $javaVersion"
        println "Main Class: $mainClassName"
    }
}

